{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useRef } from \"react\";\nimport * as React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Animatable from 'react-native-animatable';\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport Logo from \"../../assets/logoIcon/logo.png\";\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\nimport SSPLight from \"../../assets/fonts/SourceSansPro/SourceSansProLight.ttf\";\nimport SSPRegular from \"../../assets/fonts/SourceSansPro/SourceSansProRegular.ttf\";\nimport SSPBold from \"../../assets/fonts/SourceSansPro/SourceSansProBold.ttf\";\nimport { Icon } from 'react-native-elements';\nimport app from \"../config/firebase/firebase.js\";\nimport { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport registrar from \"../pages/registrar/registrar\";\nimport RNModal from 'react-native-modal';\nvar BGColor = \"#4D4A95\";\nvar auth = getAuth();\nexport default function InitialLogo(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    SSPLight: SSPLight,\n    SSPRegular: SSPRegular,\n    SSPBold: SSPBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var edges = useSafeAreaInsets();\n  var upScreen = useRef(new Animated.Value(0)).current;\n  var fadeLogo = useRef(new Animated.Value(0)).current;\n  var fadeText = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      denyFX = _useState6[0],\n      setDenyFX = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rnmodalVisible = _useState8[0],\n      setRNModalVisible = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rnmodalVisible2 = _useState10[0],\n      setRNModalVisible2 = _useState10[1];\n\n  var loginFB = function loginFB() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      setDenyFX('pulse');\n      setTimeout(function () {\n        setDenyFX('');\n      }, 1000);\n      navigation.dispatch(CommonActions.reset({\n        index: 1,\n        routes: [{\n          name: 'InitialLogo'\n        }, {\n          name: 'TelaInicio'\n        }]\n      }));\n    }).catch(function (error) {\n      setDenyFX('wobble');\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      setTimeout(function () {\n        setDenyFX('');\n      }, 500);\n    });\n  };\n\n  var recovery = function recovery() {\n    if (email !== null && email.length > 4) {\n      sendPasswordResetEmail(auth, email).then(function () {\n        setRNModalVisible(true);\n      }).catch(function (error) {\n        setRNModalVisible2(true);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n    } else {\n      setRNModalVisible2(true);\n    }\n  };\n\n  useEffect(function () {\n    setTimeout(function () {\n      Animated.sequence([Animated.timing(fadeLogo, {\n        toValue: 1,\n        useNativeDriver: true,\n        duration: 1000\n      }), Animated.timing(fadeText, {\n        toValue: 1,\n        useNativeDriver: true,\n        duration: 1000\n      }), Animated.timing(fadeText, {\n        toValue: 0,\n        delay: 1000,\n        useNativeDriver: true,\n        duration: 500\n      }), Animated.timing(upScreen, {\n        toValue: 100,\n        useNativeDriver: true,\n        duration: 1000\n      })]).start();\n    }, 350);\n  }, []);\n\n  if (!loaded) {\n    return React.createElement(AppLoading, null);\n  } else {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      }\n    }, React.createElement(View, {\n      style: styles.container\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: BGColor,\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }, React.createElement(Animatable.Image, {\n      source: Logo,\n      style: {\n        height: 150,\n        width: 150,\n        bottom: 100\n      },\n      animation: \"rubberBand\",\n      duration: 2500,\n      delay: 2500,\n      useNativeDriver: true,\n      iterationCount: Infinity\n    })), React.createElement(Animatable.Text, {\n      style: styles.titleText,\n      animation: \"fadeInUp\",\n      delay: 1200\n    }, \"QuizApp\"), React.createElement(Animatable.View, {\n      style: styles.bottomView,\n      animation: \"fadeInUp\",\n      delay: 1800\n    }, React.createElement(Text, {\n      style: styles.loginText\n    }, \"Entrar\"), React.createElement(View, {\n      style: styles.inputView\n    }, React.createElement(Icon, {\n      style: styles.inputIcon,\n      name: \"at-outline\",\n      type: \"ionicon\",\n      color: \"#5352ed\"\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      onChangeText: setEmail\n    })), React.createElement(View, {\n      style: styles.inputView\n    }, React.createElement(Icon, {\n      style: styles.inputIcon,\n      name: \"lock\",\n      type: \"ionicons\",\n      color: \"#5352ed\"\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      autoCapitalize: \"none\",\n      onChangeText: setPassword\n    })), React.createElement(RNModal, {\n      isVisible: rnmodalVisible,\n      animationIn: \"bounceInDown\",\n      animationOut: \"rotate\"\n    }, React.createElement(View, {\n      style: styles.rnmodalView\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        fontFamily: 'SSPBold'\n      }\n    }, \"Redefini\\xE7\\xE3o de senha enviado!\"), React.createElement(Text, {\n      style: {\n        marginVertical: 10,\n        fontFamily: 'SSPRegular'\n      }\n    }, \"Um email de redefini\\xE7\\xE3o de senha foi enviado para \", React.createElement(Text, {\n      style: {\n        fontFamily: 'SSPBold'\n      }\n    }, email), \". Siga os passos e depois entre com seu email e nova senha novamente.\"), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.modalButton,\n      onPress: function onPress() {\n        return setRNModalVisible(false);\n      }\n    }, React.createElement(Text, {\n      style: styles.modalButtonText\n    }, \"OK\"))))), React.createElement(RNModal, {\n      isVisible: rnmodalVisible2,\n      animationIn: \"shake\",\n      animationOut: \"bounceOutDown\"\n    }, React.createElement(View, {\n      style: styles.rnmodalView\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        fontFamily: 'SSPBold'\n      }\n    }, \"Preencha o campo Email!\"), React.createElement(Text, {\n      style: {\n        marginVertical: 10,\n        fontFamily: 'SSPRegular'\n      }\n    }, \"Um email de redefini\\xE7\\xE3o de senha ser\\xE1 enviado para o seu email. Para isso, preencha o campo email com um email v\\xE1lido e clique aqui novamente.\"), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.modalButton,\n      onPress: function onPress() {\n        return setRNModalVisible2(false);\n      }\n    }, React.createElement(Text, {\n      style: styles.modalButtonText\n    }, \"OK\"))))), React.createElement(TouchableOpacity, {\n      onPress: recovery\n    }, React.createElement(Text, {\n      style: styles.fpText\n    }, \"Esqueci a senha\")), React.createElement(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: loginFB\n    }, React.createElement(Animatable.Text, {\n      animation: denyFX,\n      style: styles.loginButtonText\n    }, \"Entrar\")), React.createElement(Text, {\n      style: styles.registerText\n    }, \"N\\xE3o possui uma conta?\", React.createElement(Text, {\n      style: {\n        color: '#5352ed',\n        fontFamily: 'SSPBold'\n      },\n      onPress: function onPress() {\n        return navigation.navigate(registrar);\n      }\n    }, ' Cadastrar')))));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  titleText: {\n    position: 'absolute',\n    top: Dimensions.get('screen').height * 0.1,\n    alignSelf: 'center',\n    color: '#fff',\n    fontFamily: 'SSPBold',\n    fontSize: 60,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  bottomView: {\n    backgroundColor: '#fff',\n    opacity: 0.95,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingTop: 10,\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  loginText: {\n    fontFamily: 'SSPBold',\n    fontSize: 24,\n    marginTop: 12,\n    marginBottom: 4\n  },\n  inputView: {\n    height: 40,\n    borderRadius: 10,\n    backgroundColor: '#f1f3f6',\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  inputIcon: {\n    paddingHorizontal: 8\n  },\n  input: {\n    height: 40,\n    flex: 1,\n    fontFamily: 'SSPRegular',\n    fontSize: 16,\n    color: '#333'\n  },\n  loginButton: {\n    backgroundColor: '#5352ed',\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 10\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontFamily: 'SSPBold',\n    alignSelf: 'center',\n    fontSize: 18\n  },\n  registerText: {\n    alignSelf: 'center',\n    marginTop: 12,\n    fontFamily: 'SSPRegular',\n    fontSize: 16\n  },\n  fpText: {\n    marginTop: 10,\n    alignSelf: 'flex-end',\n    fontFamily: 'SSPBold',\n    fontSize: 16,\n    color: '#5352ed'\n  },\n  rnmodalView: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    paddingVertical: 14,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  modalButton: {\n    backgroundColor: BGColor,\n    paddingVertical: 6,\n    paddingHorizontal: 10,\n    borderRadius: 4,\n    marginLeft: 10,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.5\n  },\n  modalButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontFamily: 'SSPBold'\n  }\n});","map":{"version":3,"sources":["C:/Users/lenil/Documents/Estudos/JS/quizApp/src/initial/InitialLogo.js"],"names":["useState","useEffect","useRef","React","Animatable","useSafeAreaInsets","Logo","AppLoading","useFonts","Inter_900Black","SSPLight","SSPRegular","SSPBold","Icon","app","getAuth","signInWithEmailAndPassword","sendPasswordResetEmail","NavigationContainer","registrar","RNModal","BGColor","auth","InitialLogo","navigation","loaded","edges","upScreen","Animated","Value","current","fadeLogo","fadeText","email","setEmail","password","setPassword","denyFX","setDenyFX","rnmodalVisible","setRNModalVisible","rnmodalVisible2","setRNModalVisible2","loginFB","then","userCredential","user","setTimeout","dispatch","CommonActions","reset","index","routes","name","catch","error","errorCode","code","errorMessage","message","recovery","length","sequence","timing","toValue","useNativeDriver","duration","delay","start","Keyboard","dismiss","styles","container","flex","backgroundColor","alignItems","justifyContent","height","width","bottom","Infinity","titleText","bottomView","loginText","inputView","inputIcon","input","rnmodalView","fontSize","fontFamily","marginVertical","flexDirection","modalButton","modalButtonText","fpText","loginButton","loginButtonText","registerText","color","navigate","StyleSheet","create","position","top","Dimensions","get","alignSelf","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","opacity","left","right","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingBottom","paddingHorizontal","marginTop","marginBottom","borderRadius","display","paddingVertical","marginLeft"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport * as React from \"react\";\r\nimport { Animated, Image, StatusBar, StyleSheet, Text, View, Keyboard, Dimensions, TouchableWithoutFeedback, TouchableOpacity, TextInput } from 'react-native';\r\nimport * as Animatable from 'react-native-animatable'\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport Logo from '../../assets/logoIcon/logo.png';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\r\nimport SSPLight from '../../assets/fonts/SourceSansPro/SourceSansProLight.ttf';\r\nimport SSPRegular from '../../assets/fonts/SourceSansPro/SourceSansProRegular.ttf';\r\nimport SSPBold from '../../assets/fonts/SourceSansPro/SourceSansProBold.ttf';\r\nimport { Icon } from 'react-native-elements';\r\nimport app from '../config/firebase/firebase.js';\r\nimport { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport registrar from \"../pages/registrar/registrar\";\r\nimport RNModal from 'react-native-modal';\r\n\r\nconst BGColor = \"#4D4A95\";\r\nconst auth = getAuth();\r\n\r\nexport default function InitialLogo({navigation}) {\r\n\r\n  const [loaded] = useFonts({\r\n    SSPLight,\r\n    SSPRegular,\r\n    SSPBold,\r\n  });\r\n\r\nconst edges = useSafeAreaInsets();\r\nconst upScreen = useRef(new Animated.Value(0)).current;\r\nconst fadeLogo = useRef(new Animated.Value(0)).current;\r\nconst fadeText = useRef(new Animated.Value(0)).current;\r\n\r\nconst [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [denyFX, setDenyFX] = useState();\r\nconst [rnmodalVisible, setRNModalVisible] = useState(false);\r\nconst [rnmodalVisible2, setRNModalVisible2] = useState(false);\r\n\r\nconst loginFB = () => {\r\n\r\nsignInWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed in\r\n    const user = userCredential.user;\r\n    setDenyFX('pulse')\r\n\r\n    setTimeout(() => {\r\n      setDenyFX('')\r\n    }, 1000);\r\n    \r\n  //  navigation.navigate(\"TelaInicio\");\r\n\r\n  navigation.dispatch(\r\n    CommonActions.reset({\r\n      index: 1,\r\n      routes: [\r\n        { name: 'InitialLogo' },\r\n        {\r\n          name: 'TelaInicio',\r\n        },\r\n      ],\r\n    })\r\n  );\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    setDenyFX('wobble')\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    setTimeout(() => {\r\n      setDenyFX('')\r\n    }, 500);\r\n  });\r\n\r\n}\r\n\r\n  const recovery = () => {\r\n\r\n    if( email !== null && email.length > 4 ) {\r\n    sendPasswordResetEmail(auth, email)\r\n  .then(() => {\r\n    \r\n    setRNModalVisible(true);\r\n\r\n  })\r\n  .catch((error) => {\r\n    setRNModalVisible2(true);\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // ..\r\n  }); } else {\r\n    setRNModalVisible2(true);\r\n  }\r\n  }\r\n\r\nuseEffect(() => {\r\n\r\n  setTimeout(() => {\r\n    \r\n    Animated.sequence([\r\n      Animated.timing(fadeLogo,\r\n        {\r\n          toValue: 1,\r\n          useNativeDriver: true,\r\n          duration: 1000\r\n        }\r\n      ),\r\n      Animated.timing(fadeText,\r\n        {\r\n          toValue: 1,\r\n          useNativeDriver: true,\r\n          duration: 1000\r\n        }\r\n      ),\r\n      Animated.timing(fadeText,\r\n        {\r\n          toValue: 0,\r\n          delay: 1000,\r\n          useNativeDriver: true,\r\n          duration: 500\r\n        }\r\n        ),\r\n        Animated.timing(upScreen,\r\n          {\r\n            toValue: 100,\r\n            useNativeDriver: true,\r\n            duration: 1000\r\n          }\r\n          ),\r\n\r\n    ]).start()\r\n\r\n  }, 350)\r\n\r\n},[]);\r\n\r\nif (!loaded) {\r\n  return <AppLoading />;\r\n} else {\r\n    return(\r\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={styles.container}>\r\n        <View style={{ flex: 1, backgroundColor: BGColor, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Animatable.Image \r\n          source={Logo} \r\n          style={{\r\n            height: 150, \r\n            width: 150,\r\n            bottom: 100,\r\n          }}\r\n          animation='rubberBand'\r\n          duration={2500}\r\n          delay={2500}\r\n          useNativeDriver\r\n          iterationCount={Infinity}\r\n            />\r\n        </View>\r\n        <Animatable.Text\r\n          style={styles.titleText}\r\n          animation='fadeInUp'\r\n          delay={1200}\r\n        >\r\n          QuizApp\r\n        </Animatable.Text>\r\n        <Animatable.View style={styles.bottomView} animation='fadeInUp' delay={1800}>\r\n          <Text style={styles.loginText}>Entrar</Text>\r\n          <View style={styles.inputView}>\r\n            <Icon\r\n              style={styles.inputIcon}\r\n              name='at-outline'\r\n              type='ionicon'\r\n              color='#5352ed'\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder='Email'\r\n              autoCapitalize='none'\r\n              keyboardType='email-address'\r\n              textContentType='emailAddress'\r\n              onChangeText={setEmail}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <Icon\r\n              style={styles.inputIcon}\r\n              name='lock'\r\n              type='ionicons'\r\n              color='#5352ed'\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder='Senha'\r\n              secureTextEntry={true}\r\n              autoCapitalize='none'\r\n              onChangeText={setPassword}\r\n            />\r\n          </View>\r\n\r\n          <RNModal isVisible={rnmodalVisible} animationIn='bounceInDown' animationOut='rotate'>\r\n                <View style={styles.rnmodalView}>\r\n                    <Text style={{fontSize: 18, fontFamily: 'SSPBold'}}>Redefinição de senha enviado!</Text>\r\n                    <Text style={{marginVertical: 10, fontFamily: 'SSPRegular'}}>Um email de redefinição de senha foi enviado para <Text style={{ fontFamily: 'SSPBold'}}>{email}</Text>. Siga os passos e depois entre com seu email e nova senha novamente.</Text>\r\n                    <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                        <TouchableOpacity style={styles.modalButton} onPress={() => setRNModalVisible(false)}><Text style={styles.modalButtonText}>OK</Text></TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </RNModal>\r\n\r\n            <RNModal isVisible={rnmodalVisible2} animationIn='shake' animationOut='bounceOutDown'>\r\n                <View style={styles.rnmodalView}>\r\n                    <Text style={{fontSize: 18, fontFamily: 'SSPBold'}}>Preencha o campo Email!</Text>\r\n                    <Text style={{marginVertical: 10, fontFamily: 'SSPRegular'}}>Um email de redefinição de senha será enviado para o seu email. Para isso, preencha o campo email com um email válido e clique aqui novamente.</Text>\r\n                    <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                        <TouchableOpacity style={styles.modalButton} onPress={() => setRNModalVisible2(false)}><Text style={styles.modalButtonText}>OK</Text></TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </RNModal>\r\n\r\n          <TouchableOpacity onPress={recovery}>\r\n          <Text style={styles.fpText}>Esqueci a senha</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.loginButton} onPress={loginFB}>\r\n            <Animatable.Text animation={denyFX} style={styles.loginButtonText}>Entrar</Animatable.Text>\r\n          </TouchableOpacity>\r\n          <Text style={styles.registerText}>\r\n            Não possui uma conta?\r\n            <Text style={{ color: '#5352ed', fontFamily: 'SSPBold' }} onPress={() => navigation.navigate(registrar)}>\r\n              {' Cadastrar'}\r\n            </Text>\r\n          </Text>\r\n        </Animatable.View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n    );\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    position: 'absolute',\r\n    top: Dimensions.get('screen').height * 0.1,\r\n    alignSelf: 'center',\r\n    color: '#fff',\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 60,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n  },\r\n  bottomView: {\r\n    backgroundColor: '#fff',\r\n    opacity: 0.95,\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    paddingTop: 10,\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  loginText: {\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 24,\r\n    marginTop: 12,\r\n    marginBottom: 4,\r\n  },\r\n  inputView: {\r\n    height: 40,\r\n    borderRadius: 10,\r\n    backgroundColor: '#f1f3f6',\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  inputIcon: {\r\n    paddingHorizontal: 8,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    flex: 1,\r\n    fontFamily: 'SSPRegular',\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#5352ed',\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    marginTop: 10,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontFamily: 'SSPBold',\r\n    alignSelf: 'center',\r\n    fontSize: 18,\r\n  },\r\n  registerText: {\r\n    alignSelf: 'center',\r\n    marginTop: 12,\r\n    fontFamily: 'SSPRegular',\r\n    fontSize: 16,\r\n  },\r\n  fpText: {\r\n    marginTop: 10,\r\n    alignSelf: 'flex-end',\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 16,\r\n    color: '#5352ed',\r\n  },\r\n  rnmodalView: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 14,\r\n    shadowColor: '#000',\r\n    shadowOffset:{\r\n        width: 0,\r\n        height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5\r\n},\r\nmodalButton: {\r\n    backgroundColor: BGColor,\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 4,\r\n    marginLeft: 10,\r\n    elevation: 2,\r\n    shadowColor: '#000',\r\n    shadowOffset:{\r\n        width: 2,\r\n        height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.5\r\n},\r\nmodalButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontFamily: 'SSPBold'\r\n}\r\n  });"]},"metadata":{},"sourceType":"module"}