{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Animatable from 'react-native-animatable';\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport Logo from \"../../assets/logoIcon/logo.png\";\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\nimport SSPLight from \"../../assets/fonts/SourceSansPro/SourceSansProLight.ttf\";\nimport SSPRegular from \"../../assets/fonts/SourceSansPro/SourceSansProRegular.ttf\";\nimport SSPBold from \"../../assets/fonts/SourceSansPro/SourceSansProBold.ttf\";\nimport { Icon } from 'react-native-elements';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport AppLoading from 'expo-app-loading';\nimport TelaInicio from \"../pages/TelaInicio/TelaInicio\";\nimport InitialLogo from \"./InitialLogo\";\nvar BGColor = \"#4D4A95\";\nvar auth = getAuth();\nexport default function LoadingApp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    SSPLight: SSPLight,\n    SSPRegular: SSPRegular,\n    SSPBold: SSPBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var edges = useSafeAreaInsets();\n  var upScreen = useRef(new Animated.Value(0)).current;\n  var fadeLogo = useRef(new Animated.Value(0)).current;\n  var fadeText = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      contFx = _useState2[0],\n      setContFx = _useState2[1];\n\n  var fadeInUp = {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: contFx\n    }\n  };\n\n  var isTheUserAuthenticated = function isTheUserAuthenticated() {\n    if (getAuth().currentUser !== null) {\n      setContFx(1);\n      setTimeout(function () {\n        navigation.navigate(\"TelaInicio\");\n      }, 500);\n    } else {\n      navigation.navigate(\"InitialLogo\");\n      setContFx(0);\n    }\n  };\n\n  useEffect(function () {\n    setTimeout(function () {\n      Animated.sequence([Animated.timing(fadeLogo, {\n        toValue: 1,\n        useNativeDriver: true,\n        duration: 1000\n      }), Animated.timing(fadeText, {\n        toValue: 1,\n        useNativeDriver: true,\n        duration: 1000\n      }), Animated.timing(fadeText, {\n        toValue: 0,\n        delay: 1000,\n        useNativeDriver: true,\n        duration: 500\n      }), Animated.timing(upScreen, {\n        toValue: 100,\n        useNativeDriver: true,\n        duration: 1000\n      })]).start();\n    }, 350);\n  }, []);\n  setTimeout(function () {\n    isTheUserAuthenticated();\n  }, 4000);\n\n  if (!loaded) {\n    return React.createElement(AppLoading, null);\n  } else {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      }\n    }, React.createElement(View, {\n      style: styles.container\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: BGColor,\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }, React.createElement(Animatable.Image, {\n      source: Logo,\n      style: {\n        height: 150,\n        width: 150\n      },\n      animation: \"rubberBand\",\n      duration: 2500,\n      delay: 2500,\n      useNativeDriver: true,\n      iterationCount: Infinity\n    })), React.createElement(Animatable.Text, {\n      style: styles.titleText,\n      animation: fadeInUp,\n      delay: 1200\n    }, \"QuizApp\")));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  titleText: {\n    position: 'absolute',\n    top: Dimensions.get('screen').height * 0.1,\n    alignSelf: 'center',\n    color: '#fff',\n    fontFamily: 'SSPBold',\n    fontSize: 60,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  bottomView: {\n    backgroundColor: '#fff',\n    opacity: 0.95,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingTop: 10,\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  loginText: {\n    fontFamily: 'SSPBold',\n    fontSize: 24,\n    marginTop: 12,\n    marginBottom: 4\n  },\n  inputView: {\n    height: 40,\n    borderRadius: 10,\n    backgroundColor: '#f1f3f6',\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  inputIcon: {\n    paddingHorizontal: 8\n  },\n  input: {\n    height: 40,\n    flex: 1,\n    fontFamily: 'SSPRegular',\n    fontSize: 16,\n    color: '#333'\n  },\n  loginButton: {\n    backgroundColor: '#5352ed',\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 10\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontFamily: 'SSPBold',\n    alignSelf: 'center',\n    fontSize: 18\n  },\n  registerText: {\n    alignSelf: 'center',\n    marginTop: 12,\n    fontFamily: 'SSPRegular',\n    fontSize: 16\n  },\n  fpText: {\n    marginTop: 10,\n    alignSelf: 'flex-end',\n    fontFamily: 'SSPBold',\n    fontSize: 16,\n    color: '#5352ed'\n  }\n});","map":{"version":3,"sources":["C:/Users/lenil/Documents/Estudos/JS/quizApp/src/initial/LoadingApp.js"],"names":["React","useState","useEffect","useRef","Animatable","useSafeAreaInsets","Logo","useFonts","Inter_900Black","SSPLight","SSPRegular","SSPBold","Icon","getAuth","onAuthStateChanged","AppLoading","TelaInicio","InitialLogo","BGColor","auth","LoadingApp","navigation","loaded","edges","upScreen","Animated","Value","current","fadeLogo","fadeText","contFx","setContFx","fadeInUp","from","opacity","to","isTheUserAuthenticated","currentUser","setTimeout","navigate","sequence","timing","toValue","useNativeDriver","duration","delay","start","Keyboard","dismiss","styles","container","flex","backgroundColor","alignItems","justifyContent","height","width","Infinity","titleText","StyleSheet","create","position","top","Dimensions","get","alignSelf","color","fontFamily","fontSize","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","bottomView","bottom","left","right","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingBottom","paddingHorizontal","loginText","marginTop","marginBottom","inputView","borderRadius","display","flexDirection","inputIcon","input","loginButton","paddingVertical","loginButtonText","registerText","fpText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Animated, Image, StatusBar, StyleSheet, Text, View, Keyboard, Dimensions, TouchableWithoutFeedback, TouchableOpacity, TextInput } from 'react-native';\r\nimport * as Animatable from 'react-native-animatable'\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport Logo from '../../assets/logoIcon/logo.png';\r\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\r\nimport SSPLight from '../../assets/fonts/SourceSansPro/SourceSansProLight.ttf';\r\nimport SSPRegular from '../../assets/fonts/SourceSansPro/SourceSansProRegular.ttf';\r\nimport SSPBold from '../../assets/fonts/SourceSansPro/SourceSansProBold.ttf';\r\nimport { Icon } from 'react-native-elements';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport TelaInicio from \"../pages/TelaInicio/TelaInicio\";\r\nimport InitialLogo from \"./InitialLogo\";\r\n\r\nconst BGColor = \"#4D4A95\";\r\nconst auth = getAuth();\r\n\r\nexport default function LoadingApp( {navigation} ) {\r\n\r\n  const [loaded] = useFonts({\r\n    SSPLight,\r\n    SSPRegular,\r\n    SSPBold,\r\n  });\r\n\r\nconst edges = useSafeAreaInsets();\r\nconst upScreen = useRef(new Animated.Value(0)).current;\r\nconst fadeLogo = useRef(new Animated.Value(0)).current;\r\nconst fadeText = useRef(new Animated.Value(0)).current;\r\n\r\nconst [contFx, setContFx] = useState(0)\r\nconst fadeInUp = {\r\n  from:{\r\n    opacity: 0,\r\n  },\r\n  to: {\r\n    opacity: contFx,\r\n  }\r\n}\r\n\r\nconst isTheUserAuthenticated = () => {\r\n  if (getAuth().currentUser !== null) {\r\n    setContFx(1)\r\n    setTimeout(() => {\r\n      navigation.navigate(\"TelaInicio\");\r\n    }, 500);\r\n  } else {\r\n    navigation.navigate(\"InitialLogo\");\r\n    setContFx(0)\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n\r\n  setTimeout(() => {\r\n    \r\n    Animated.sequence([\r\n      Animated.timing(fadeLogo,\r\n        {\r\n          toValue: 1,\r\n          useNativeDriver: true,\r\n          duration: 1000\r\n        }\r\n      ),\r\n      Animated.timing(fadeText,\r\n        {\r\n          toValue: 1,\r\n          useNativeDriver: true,\r\n          duration: 1000\r\n        }\r\n      ),\r\n      Animated.timing(fadeText,\r\n        {\r\n          toValue: 0,\r\n          delay: 1000,\r\n          useNativeDriver: true,\r\n          duration: 500\r\n        }\r\n        ),\r\n        Animated.timing(upScreen,\r\n          {\r\n            toValue: 100,\r\n            useNativeDriver: true,\r\n            duration: 1000\r\n          }\r\n          ),\r\n\r\n    ]).start()\r\n\r\n  }, 350)\r\n},[])\r\n\r\nsetTimeout(() => {\r\n  isTheUserAuthenticated();\r\n}, 4000);\r\n\r\nif (!loaded ) {\r\n  return <AppLoading />;\r\n} else {\r\n    return(\r\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={styles.container}>\r\n        <View style={{ flex: 1, backgroundColor: BGColor, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Animatable.Image \r\n          source={Logo} \r\n          style={{\r\n            height: 150, \r\n            width: 150,\r\n          }}\r\n          animation='rubberBand'\r\n          duration={2500}\r\n          delay={2500}\r\n          useNativeDriver\r\n          iterationCount={Infinity}\r\n            />\r\n        </View>\r\n        <Animatable.Text\r\n          style={styles.titleText}\r\n          animation={fadeInUp}\r\n          delay={1200}\r\n        >\r\n          QuizApp\r\n        </Animatable.Text>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n    );\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    position: 'absolute',\r\n    top: Dimensions.get('screen').height * 0.1,\r\n    alignSelf: 'center',\r\n    color: '#fff',\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 60,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n  },\r\n  bottomView: {\r\n    backgroundColor: '#fff',\r\n    opacity: 0.95,\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    paddingTop: 10,\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  loginText: {\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 24,\r\n    marginTop: 12,\r\n    marginBottom: 4,\r\n  },\r\n  inputView: {\r\n    height: 40,\r\n    borderRadius: 10,\r\n    backgroundColor: '#f1f3f6',\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  inputIcon: {\r\n    paddingHorizontal: 8,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    flex: 1,\r\n    fontFamily: 'SSPRegular',\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#5352ed',\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    marginTop: 10,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontFamily: 'SSPBold',\r\n    alignSelf: 'center',\r\n    fontSize: 18,\r\n  },\r\n  registerText: {\r\n    alignSelf: 'center',\r\n    marginTop: 12,\r\n    fontFamily: 'SSPRegular',\r\n    fontSize: 16,\r\n  },\r\n  fpText: {\r\n    marginTop: 10,\r\n    alignSelf: 'flex-end',\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 16,\r\n    color: '#5352ed',\r\n  },\r\n  });"]},"metadata":{},"sourceType":"module"}