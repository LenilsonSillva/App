{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport InitialLogo from \"./src/initial/InitialLogo\";\nimport LoadingApp from \"./src/initial/LoadingApp\";\nimport Constants from 'expo-constants';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport registrar from \"./src/pages/registrar/registrar\";\nimport TelaInicio from \"./src/pages/TelaInicio/TelaInicio\";\nimport Amigos from \"./src/pages/TelaAmigos/Amigos\";\nimport Ajustes from \"./src/pages/TelaConfig/Ajustes\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Icon } from 'react-native-elements';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport SystemNavigationBar from \"react-native-system-navigation-bar\";\nimport Store from \"./src/pages/store/Store\";\nimport Missoes from \"./src/pages/missoes/Missoes\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar BGColor = \"#4D4A95\";\n\nfunction OpcTabs() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          position: 'absolute',\n          backgroundColor: \"#F4AF5F\",\n          height: hp('7'),\n          borderRadius: 50,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginHorizontal: wp('2'),\n          marginBottom: hp('1'),\n          borderTopWidth: 0\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          var iconType;\n          var iconSize = hp('4');\n\n          if (route.name === 'Jogar') {\n            iconName = true ? 'home' : 'home';\n            iconType = 'Ionicons';\n          } else if (route.name === 'Amigos') {\n            iconName = focused ? 'person' : 'person';\n            iconType = 'Ionicons';\n          } else if (route.name === 'Ajustes') {\n            iconName = focused ? 'settings' : 'settings';\n            iconType = 'Ionicons';\n          } else if (route.name === 'Store') {\n            iconName = focused ? 'settings' : 'settings';\n            iconType = 'Ionicons';\n          } else if (route.name === 'Missoes') {\n            iconName = focused ? 'settings' : 'settings';\n            iconType = 'Ionicons';\n          }\n\n          return React.createElement(Icon, {\n            name: iconName,\n            size: iconSize,\n            color: color,\n            type: iconType\n          });\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Missoes\",\n    component: Missoes,\n    options: {\n      headerShown: false\n    },\n    lazy: true\n  }), React.createElement(Tab.Screen, {\n    name: \"Amigos\",\n    component: Amigos,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Jogar\",\n    component: TelaInicio,\n    options: {\n      headerShown: false\n    },\n    lazy: false\n  }), React.createElement(Tab.Screen, {\n    name: \"Ajustes\",\n    component: Ajustes,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Store\",\n    component: Store,\n    options: {\n      headerShown: false\n    }\n  }));\n}\n\nexport default function App(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(NavigationContainer, null, React.createElement(StatusBar, {\n    hidden: true\n  }), React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"LoadingApp\",\n    component: LoadingApp,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"InitialLogo\",\n    component: InitialLogo,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"registrar\",\n    component: registrar,\n    options: {\n      title: \"\",\n      headerTransparent: true,\n      headerShadowVisible: false,\n      headerTintColor: 'white'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TelaInicio\",\n    component: OpcTabs,\n    options: {\n      headerShown: false\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/lenil/Documents/Estudos/JS/quizApp/App.js"],"names":["StatusBar","React","SafeAreaProvider","InitialLogo","LoadingApp","Constants","NavigationContainer","useNavigation","createNativeStackNavigator","registrar","TelaInicio","Amigos","Ajustes","createBottomTabNavigator","Icon","widthPercentageToDP","wp","heightPercentageToDP","hp","SystemNavigationBar","Store","Missoes","Stack","Tab","BGColor","OpcTabs","route","tabBarShowLabel","tabBarStyle","position","backgroundColor","height","borderRadius","justifyContent","alignItems","marginHorizontal","marginBottom","borderTopWidth","tabBarIcon","focused","color","size","iconName","iconType","iconSize","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","App","navigation","title","headerTransparent","headerShadowVisible","headerTintColor"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport InitialLogo from './src/initial/InitialLogo';\nimport LoadingApp from './src/initial/LoadingApp';\nimport Constants from 'expo-constants';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport registrar from './src/pages/registrar/registrar';\nimport TelaInicio from './src/pages/TelaInicio/TelaInicio';\nimport Amigos from './src/pages/TelaAmigos/Amigos';\nimport Ajustes from './src/pages/TelaConfig/Ajustes';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Icon } from 'react-native-elements';\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\nimport SystemNavigationBar from \"react-native-system-navigation-bar\";\nimport Store from './src/pages/store/Store';\nimport Missoes from './src/pages/missoes/Missoes';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst BGColor = \"#4D4A95\"\n\nfunction OpcTabs() {\n  return (\n      <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarShowLabel: false,\n        tabBarStyle: {\n        position: 'absolute',\n        backgroundColor:\"#F4AF5F\",\n        height:hp('7'),\n        borderRadius:50,\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        marginHorizontal: wp('2'),\n        marginBottom: hp('1'),\n        borderTopWidth:0,\n        },\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          let iconType;\n          let iconSize = hp('4')\n\n          if (route.name === 'Jogar') {\n            iconName = true ? 'home' : 'home';\n            iconType = 'Ionicons'\n          } else if (route.name === 'Amigos') {\n            iconName = focused ? 'person' : 'person';\n            iconType = 'Ionicons'\n          }  else if (route.name === 'Ajustes') {\n            iconName = focused ? 'settings' : 'settings';\n            iconType = 'Ionicons'\n          } else if (route.name === 'Store') {\n            iconName = focused ? 'settings' : 'settings';\n            iconType = 'Ionicons'\n          } else if (route.name === 'Missoes') {\n            iconName = focused ? 'settings' : 'settings';\n            iconType = 'Ionicons'\n          }\n\n          // You can return any component that you like here!\n          return <Icon name={iconName} size={iconSize} color={color} type={iconType} />;\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n        <Tab.Screen name=\"Missoes\" component={Missoes} options={{headerShown: false}} lazy={true}/>\n        <Tab.Screen name=\"Amigos\" component={Amigos} options={{headerShown: false}}/>\n        <Tab.Screen name=\"Jogar\" component={TelaInicio} options={{headerShown: false}} lazy={false}/>\n        <Tab.Screen name=\"Ajustes\" component={Ajustes} options={{headerShown: false}}/>\n        <Tab.Screen name=\"Store\" component={Store} options={{headerShown: false}}/>\n      </Tab.Navigator>\n  );\n}\n\nexport default function App({navigation}) {\n\n  return (\n    <NavigationContainer>\n        <StatusBar hidden={true} />\n        <Stack.Navigator>\n          <Stack.Screen name=\"LoadingApp\" component={LoadingApp} options={{headerShown: false}}/>\n            <Stack.Screen name=\"InitialLogo\" component={InitialLogo} options={{headerShown: false}}/>\n            <Stack.Screen name=\"registrar\" component={registrar} options={{\n              title: \"\",\n              headerTransparent: true,\n              headerShadowVisible: false,\n              headerTintColor: 'white'\n            }}/>\n            <Stack.Screen name=\"TelaInicio\" component={OpcTabs} options={{headerShown: false}}/>\n        </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}