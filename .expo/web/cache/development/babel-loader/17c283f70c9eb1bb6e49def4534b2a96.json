{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useRef } from \"react\";\nimport * as React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Animatable from 'react-native-animatable';\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport Logo from \"../../assets/logoIcon/logo.png\";\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\nimport SSPLight from \"../../assets/fonts/SourceSansPro/SourceSansProLight.ttf\";\nimport SSPRegular from \"../../assets/fonts/SourceSansPro/SourceSansProRegular.ttf\";\nimport SSPBold from \"../../assets/fonts/SourceSansPro/SourceSansProBold.ttf\";\nimport { Icon } from 'react-native-elements';\nimport app from \"../config/firebase/firebase.js\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport registrar from \"../pages/registrar/registrar\";\nvar BGColor = \"#4D4A95\";\nexport default function InitialLogo(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    SSPLight: SSPLight,\n    SSPRegular: SSPRegular,\n    SSPBold: SSPBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var edges = useSafeAreaInsets();\n  var upScreen = useRef(new Animated.Value(0)).current;\n  var fadeLogo = useRef(new Animated.Value(0)).current;\n  var fadeText = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      denyFX = _useState6[0],\n      setDenyFX = _useState6[1];\n\n  var loginFB = function loginFB() {\n    var auth = getAuth();\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      setDenyFX('pulse');\n      setTimeout(function () {\n        setDenyFX('');\n      }, 1000);\n    }).catch(function (error) {\n      setDenyFX('wobble');\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      setTimeout(function () {\n        setDenyFX('');\n      }, 500);\n    });\n  };\n\n  useEffect(function () {\n    setTimeout(function () {\n      Animated.sequence([Animated.timing(fadeLogo, {\n        toValue: 1,\n        useNativeDriver: true,\n        duration: 1000\n      }), Animated.timing(fadeText, {\n        toValue: 1,\n        useNativeDriver: true,\n        duration: 1000\n      }), Animated.timing(fadeText, {\n        toValue: 0,\n        delay: 1000,\n        useNativeDriver: true,\n        duration: 500\n      }), Animated.timing(upScreen, {\n        toValue: 100,\n        useNativeDriver: true,\n        duration: 1000\n      })]).start();\n    }, 350);\n  }, []);\n\n  if (!loaded) {\n    return React.createElement(AppLoading, null);\n  } else {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      }\n    }, React.createElement(View, {\n      style: styles.container\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: BGColor,\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }, React.createElement(Animatable.Image, {\n      source: Logo,\n      style: {\n        height: 150,\n        width: 150,\n        bottom: 100\n      },\n      animation: \"rubberBand\",\n      duration: 2500,\n      delay: 2500,\n      useNativeDriver: true,\n      iterationCount: Infinity\n    })), React.createElement(Animatable.Text, {\n      style: styles.titleText,\n      animation: \"fadeInUp\",\n      delay: 1200\n    }, \"QuizApp\"), React.createElement(Animatable.View, {\n      style: styles.bottomView,\n      animation: \"fadeInUp\",\n      delay: 1800\n    }, React.createElement(Text, {\n      style: styles.loginText\n    }, \"Entrar\"), React.createElement(View, {\n      style: styles.inputView\n    }, React.createElement(Icon, {\n      style: styles.inputIcon,\n      name: \"at-outline\",\n      type: \"ionicon\",\n      color: \"#5352ed\"\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Usu\\xE1rio\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      onChangeText: setEmail\n    })), React.createElement(View, {\n      style: styles.inputView\n    }, React.createElement(Icon, {\n      style: styles.inputIcon,\n      name: \"lock\",\n      type: \"ionicons\",\n      color: \"#5352ed\"\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      autoCapitalize: \"none\",\n      onChangeText: setPassword\n    })), React.createElement(TouchableOpacity, null, React.createElement(Text, {\n      style: styles.fpText\n    }, \"Esqueci a senha\")), React.createElement(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: loginFB\n    }, React.createElement(Animatable.Text, {\n      animation: denyFX,\n      style: styles.loginButtonText\n    }, \"Entrar\")), React.createElement(Text, {\n      style: styles.registerText\n    }, \"N\\xE3o possui uma conta?\", React.createElement(Text, {\n      style: {\n        color: '#5352ed',\n        fontFamily: 'SSPBold'\n      },\n      onPress: function onPress() {\n        return navigation.navigate(registrar);\n      }\n    }, ' Cadastrar')))));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  titleText: {\n    position: 'absolute',\n    top: Dimensions.get('screen').height * 0.1,\n    alignSelf: 'center',\n    color: '#fff',\n    fontFamily: 'SSPBold',\n    fontSize: 60,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  bottomView: {\n    backgroundColor: '#fff',\n    opacity: 0.95,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingTop: 10,\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  loginText: {\n    fontFamily: 'SSPBold',\n    fontSize: 24,\n    marginTop: 12,\n    marginBottom: 4\n  },\n  inputView: {\n    height: 40,\n    borderRadius: 10,\n    backgroundColor: '#f1f3f6',\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  inputIcon: {\n    paddingHorizontal: 8\n  },\n  input: {\n    height: 40,\n    flex: 1,\n    fontFamily: 'SSPRegular',\n    fontSize: 16,\n    color: '#333'\n  },\n  loginButton: {\n    backgroundColor: '#5352ed',\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 10\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontFamily: 'SSPBold',\n    alignSelf: 'center',\n    fontSize: 18\n  },\n  registerText: {\n    alignSelf: 'center',\n    marginTop: 12,\n    fontFamily: 'SSPRegular',\n    fontSize: 16\n  },\n  fpText: {\n    marginTop: 10,\n    alignSelf: 'flex-end',\n    fontFamily: 'SSPBold',\n    fontSize: 16,\n    color: '#5352ed'\n  }\n});","map":{"version":3,"sources":["C:/Users/lenil/Documents/Estudos/JS/quizApp/src/initial/InitialLogo.js"],"names":["useState","useEffect","useRef","React","Animatable","useSafeAreaInsets","Logo","AppLoading","useFonts","Inter_900Black","SSPLight","SSPRegular","SSPBold","Icon","app","getAuth","signInWithEmailAndPassword","NavigationContainer","registrar","BGColor","InitialLogo","navigation","loaded","edges","upScreen","Animated","Value","current","fadeLogo","fadeText","email","setEmail","password","setPassword","denyFX","setDenyFX","loginFB","auth","then","userCredential","user","setTimeout","catch","error","errorCode","code","errorMessage","message","sequence","timing","toValue","useNativeDriver","duration","delay","start","Keyboard","dismiss","styles","container","flex","backgroundColor","alignItems","justifyContent","height","width","bottom","Infinity","titleText","bottomView","loginText","inputView","inputIcon","input","fpText","loginButton","loginButtonText","registerText","color","fontFamily","navigate","StyleSheet","create","position","top","Dimensions","get","alignSelf","fontSize","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","opacity","left","right","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingBottom","paddingHorizontal","marginTop","marginBottom","borderRadius","display","flexDirection","paddingVertical"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;;;;;;;;;;AAEA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,0BAAzC;AACA,OAAOC,QAAP;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,GAAP;AACA,SAASC,OAAT,EAAkBC,0BAAlB,QAAoD,eAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,SAAP;AAEA,IAAMC,OAAO,GAAG,SAAhB;AAEA,eAAe,SAASC,WAAT,OAAmC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAEhD,kBAAiBb,QAAQ,CAAC;AACxBE,IAAAA,QAAQ,EAARA,QADwB;AAExBC,IAAAA,UAAU,EAAVA,UAFwB;AAGxBC,IAAAA,OAAO,EAAPA;AAHwB,GAAD,CAAzB;AAAA;AAAA,MAAOU,MAAP;;AAMF,MAAMC,KAAK,GAAGlB,iBAAiB,EAA/B;AACA,MAAMmB,QAAQ,GAAGtB,MAAM,CAAC,IAAIuB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C;AACA,MAAMC,QAAQ,GAAG1B,MAAM,CAAC,IAAIuB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C;AACA,MAAME,QAAQ,GAAG3B,MAAM,CAAC,IAAIuB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C;;AAEA,kBAA0B3B,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAO8B,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgC/B,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOgC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4BjC,QAAQ,EAApC;AAAA;AAAA,MAAOkC,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpB,QAAMC,IAAI,GAAGtB,OAAO,EAApB;AACFC,IAAAA,0BAA0B,CAACqB,IAAD,EAAOP,KAAP,EAAcE,QAAd,CAA1B,CACGM,IADH,CACQ,UAACC,cAAD,EAAoB;AAExB,UAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACAL,MAAAA,SAAS,CAAC,OAAD,CAAT;AAEAM,MAAAA,UAAU,CAAC,YAAM;AACfN,QAAAA,SAAS,CAAC,EAAD,CAAT;AACD,OAFS,EAEP,IAFO,CAAV;AAMD,KAZH,EAaGO,KAbH,CAaS,UAACC,KAAD,EAAW;AAChBR,MAAAA,SAAS,CAAC,QAAD,CAAT;AACA,UAAMS,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAN,MAAAA,UAAU,CAAC,YAAM;AACfN,QAAAA,SAAS,CAAC,EAAD,CAAT;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KApBH;AAsBC,GAzBD;;AA2BAlC,EAAAA,SAAS,CAAC,YAAM;AAEdwC,IAAAA,UAAU,CAAC,YAAM;AAEfhB,MAAAA,QAAQ,CAACuB,QAAT,CAAkB,CAChBvB,QAAQ,CAACwB,MAAT,CAAgBrB,QAAhB,EACE;AACEsB,QAAAA,OAAO,EAAE,CADX;AAEEC,QAAAA,eAAe,EAAE,IAFnB;AAGEC,QAAAA,QAAQ,EAAE;AAHZ,OADF,CADgB,EAQhB3B,QAAQ,CAACwB,MAAT,CAAgBpB,QAAhB,EACE;AACEqB,QAAAA,OAAO,EAAE,CADX;AAEEC,QAAAA,eAAe,EAAE,IAFnB;AAGEC,QAAAA,QAAQ,EAAE;AAHZ,OADF,CARgB,EAehB3B,QAAQ,CAACwB,MAAT,CAAgBpB,QAAhB,EACE;AACEqB,QAAAA,OAAO,EAAE,CADX;AAEEG,QAAAA,KAAK,EAAE,IAFT;AAGEF,QAAAA,eAAe,EAAE,IAHnB;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OADF,CAfgB,EAuBd3B,QAAQ,CAACwB,MAAT,CAAgBzB,QAAhB,EACE;AACE0B,QAAAA,OAAO,EAAE,GADX;AAEEC,QAAAA,eAAe,EAAE,IAFnB;AAGEC,QAAAA,QAAQ,EAAE;AAHZ,OADF,CAvBc,CAAlB,EA+BGE,KA/BH;AAiCD,KAnCS,EAmCP,GAnCO,CAAV;AAqCD,GAvCQ,EAuCP,EAvCO,CAAT;;AAyCA,MAAI,CAAChC,MAAL,EAAa;AACX,WAAO,oBAAC,UAAD,OAAP;AACD,GAFD,MAEO;AACH,WACE,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMiC,QAAQ,CAACC,OAAT,EAAN;AAAA;AAAnC,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,eAAe,EAAEzC,OAA5B;AAAqC0C,QAAAA,UAAU,EAAE,QAAjD;AAA2DC,QAAAA,cAAc,EAAE;AAA3E;AAAb,OACA,oBAAC,UAAD,CAAY,KAAZ;AACE,MAAA,MAAM,EAAExD,IADV;AAEE,MAAA,KAAK,EAAE;AACLyD,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,KAAK,EAAE,GAFF;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAFT;AAOE,MAAA,SAAS,EAAC,YAPZ;AAQE,MAAA,QAAQ,EAAE,IARZ;AASE,MAAA,KAAK,EAAE,IATT;AAUE,MAAA,eAAe,MAVjB;AAWE,MAAA,cAAc,EAAEC;AAXlB,MADA,CADF,EAgBE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,KAAK,EAAET,MAAM,CAACU,SADhB;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,KAAK,EAAE;AAHT,iBAhBF,EAuBE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,KAAK,EAAEV,MAAM,CAACW,UAA/B;AAA2C,MAAA,SAAS,EAAC,UAArD;AAAgE,MAAA,KAAK,EAAE;AAAvE,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,MAAM,CAACY;AAApB,gBADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACa;AAApB,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEb,MAAM,CAACc,SADhB;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,KAAK,EAAC;AAJR,MADF,EAOE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEd,MAAM,CAACe,KADhB;AAEE,MAAA,WAAW,EAAC,YAFd;AAGE,MAAA,cAAc,EAAC,MAHjB;AAIE,MAAA,YAAY,EAAC,eAJf;AAKE,MAAA,eAAe,EAAC,cALlB;AAME,MAAA,YAAY,EAAEzC;AANhB,MAPF,CAFF,EAkBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE0B,MAAM,CAACa;AAApB,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEb,MAAM,CAACc,SADhB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC;AAJR,MADF,EAOE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEd,MAAM,CAACe,KADhB;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,eAAe,EAAE,IAHnB;AAIE,MAAA,cAAc,EAAC,MAJjB;AAKE,MAAA,YAAY,EAAEvC;AALhB,MAPF,CAlBF,EAiCE,oBAAC,gBAAD,QACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEwB,MAAM,CAACgB;AAApB,yBADA,CAjCF,EAoCE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEhB,MAAM,CAACiB,WAAhC;AAA6C,MAAA,OAAO,EAAEtC;AAAtD,OACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,SAAS,EAAEF,MAA5B;AAAoC,MAAA,KAAK,EAAEuB,MAAM,CAACkB;AAAlD,gBADF,CApCF,EAuCE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,mCAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAA0D,MAAA,OAAO,EAAE;AAAA,eAAMzD,UAAU,CAAC0D,QAAX,CAAoB7D,SAApB,CAAN;AAAA;AAAnE,OACG,YADH,CAFF,CAvCF,CAvBF,CADA,CADF;AA0EH;AACA;AAED,IAAMuC,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC/BvB,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BQ,EAAAA,SAAS,EAAE;AACTe,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,GAAG,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBtB,MAAzB,GAAkC,GAF9B;AAGTuB,IAAAA,SAAS,EAAE,QAHF;AAITT,IAAAA,KAAK,EAAE,MAJE;AAKTC,IAAAA,UAAU,EAAE,SALH;AAMTS,IAAAA,QAAQ,EAAE,EAND;AAOTC,IAAAA,WAAW,EAAE,MAPJ;AAQTC,IAAAA,YAAY,EAAE;AACZzB,MAAAA,KAAK,EAAE,CADK;AAEZD,MAAAA,MAAM,EAAE;AAFI,KARL;AAYT2B,IAAAA,aAAa,EAAE,IAZN;AAaTC,IAAAA,YAAY,EAAE,KAbL;AAcTC,IAAAA,SAAS,EAAE;AAdF,GAJoB;AAoB/BxB,EAAAA,UAAU,EAAE;AACVR,IAAAA,eAAe,EAAE,MADP;AAEViC,IAAAA,OAAO,EAAE,IAFC;AAGVX,IAAAA,QAAQ,EAAE,UAHA;AAIVjB,IAAAA,MAAM,EAAE,CAJE;AAKV6B,IAAAA,IAAI,EAAE,CALI;AAMVC,IAAAA,KAAK,EAAE,CANG;AAOVC,IAAAA,mBAAmB,EAAE,EAPX;AAQVC,IAAAA,oBAAoB,EAAE,EARZ;AASVC,IAAAA,UAAU,EAAE,EATF;AAUVC,IAAAA,aAAa,EAAE,EAVL;AAWVC,IAAAA,iBAAiB,EAAE;AAXT,GApBmB;AAiC/B/B,EAAAA,SAAS,EAAE;AACTS,IAAAA,UAAU,EAAE,SADH;AAETS,IAAAA,QAAQ,EAAE,EAFD;AAGTc,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,YAAY,EAAE;AAJL,GAjCoB;AAuC/BhC,EAAAA,SAAS,EAAE;AACTP,IAAAA,MAAM,EAAE,EADC;AAETwC,IAAAA,YAAY,EAAE,EAFL;AAGT3C,IAAAA,eAAe,EAAE,SAHR;AAITyC,IAAAA,SAAS,EAAE,EAJF;AAKTG,IAAAA,OAAO,EAAE,MALA;AAMTC,IAAAA,aAAa,EAAE,KANN;AAOT5C,IAAAA,UAAU,EAAE;AAPH,GAvCoB;AAgD/BU,EAAAA,SAAS,EAAE;AACT6B,IAAAA,iBAAiB,EAAE;AADV,GAhDoB;AAmD/B5B,EAAAA,KAAK,EAAE;AACLT,IAAAA,MAAM,EAAE,EADH;AAELJ,IAAAA,IAAI,EAAE,CAFD;AAGLmB,IAAAA,UAAU,EAAE,YAHP;AAILS,IAAAA,QAAQ,EAAE,EAJL;AAKLV,IAAAA,KAAK,EAAE;AALF,GAnDwB;AA0D/BH,EAAAA,WAAW,EAAE;AACXd,IAAAA,eAAe,EAAE,SADN;AAEX8C,IAAAA,eAAe,EAAE,EAFN;AAGXH,IAAAA,YAAY,EAAE,CAHH;AAIXF,IAAAA,SAAS,EAAE;AAJA,GA1DkB;AAgE/B1B,EAAAA,eAAe,EAAE;AACfE,IAAAA,KAAK,EAAE,MADQ;AAEfC,IAAAA,UAAU,EAAE,SAFG;AAGfQ,IAAAA,SAAS,EAAE,QAHI;AAIfC,IAAAA,QAAQ,EAAE;AAJK,GAhEc;AAsE/BX,EAAAA,YAAY,EAAE;AACZU,IAAAA,SAAS,EAAE,QADC;AAEZe,IAAAA,SAAS,EAAE,EAFC;AAGZvB,IAAAA,UAAU,EAAE,YAHA;AAIZS,IAAAA,QAAQ,EAAE;AAJE,GAtEiB;AA4E/Bd,EAAAA,MAAM,EAAE;AACN4B,IAAAA,SAAS,EAAE,EADL;AAENf,IAAAA,SAAS,EAAE,UAFL;AAGNR,IAAAA,UAAU,EAAE,SAHN;AAINS,IAAAA,QAAQ,EAAE,EAJJ;AAKNV,IAAAA,KAAK,EAAE;AALD;AA5EuB,CAAlB,CAAf","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport * as React from \"react\";\r\nimport { Animated, Image, StatusBar, StyleSheet, Text, View, Keyboard, Dimensions, TouchableWithoutFeedback, TouchableOpacity, TextInput } from 'react-native';\r\nimport * as Animatable from 'react-native-animatable'\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport Logo from '../../assets/logoIcon/logo.png';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\r\nimport SSPLight from '../../assets/fonts/SourceSansPro/SourceSansProLight.ttf';\r\nimport SSPRegular from '../../assets/fonts/SourceSansPro/SourceSansProRegular.ttf';\r\nimport SSPBold from '../../assets/fonts/SourceSansPro/SourceSansProBold.ttf';\r\nimport { Icon } from 'react-native-elements';\r\nimport app from '../config/firebase/firebase.js';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport registrar from \"../pages/registrar/registrar\";\r\n\r\nconst BGColor = \"#4D4A95\"\r\n\r\nexport default function InitialLogo({navigation}) {\r\n\r\n  const [loaded] = useFonts({\r\n    SSPLight,\r\n    SSPRegular,\r\n    SSPBold,\r\n  });\r\n\r\nconst edges = useSafeAreaInsets();\r\nconst upScreen = useRef(new Animated.Value(0)).current;\r\nconst fadeLogo = useRef(new Animated.Value(0)).current;\r\nconst fadeText = useRef(new Animated.Value(0)).current;\r\n\r\nconst [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [denyFX, setDenyFX] = useState();\r\n\r\nconst loginFB = () => {\r\n\r\n  const auth = getAuth();\r\nsignInWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed in\r\n    const user = userCredential.user;\r\n    setDenyFX('pulse')\r\n\r\n    setTimeout(() => {\r\n      setDenyFX('')\r\n    }, 1000);\r\n\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    setDenyFX('wobble')\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    setTimeout(() => {\r\n      setDenyFX('')\r\n    }, 500);\r\n  });\r\n\r\n}\r\n\r\nuseEffect(() => {\r\n\r\n  setTimeout(() => {\r\n    \r\n    Animated.sequence([\r\n      Animated.timing(fadeLogo,\r\n        {\r\n          toValue: 1,\r\n          useNativeDriver: true,\r\n          duration: 1000\r\n        }\r\n      ),\r\n      Animated.timing(fadeText,\r\n        {\r\n          toValue: 1,\r\n          useNativeDriver: true,\r\n          duration: 1000\r\n        }\r\n      ),\r\n      Animated.timing(fadeText,\r\n        {\r\n          toValue: 0,\r\n          delay: 1000,\r\n          useNativeDriver: true,\r\n          duration: 500\r\n        }\r\n        ),\r\n        Animated.timing(upScreen,\r\n          {\r\n            toValue: 100,\r\n            useNativeDriver: true,\r\n            duration: 1000\r\n          }\r\n          ),\r\n\r\n    ]).start()\r\n\r\n  }, 350)\r\n\r\n},[]);\r\n\r\nif (!loaded) {\r\n  return <AppLoading />;\r\n} else {\r\n    return(\r\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={styles.container}>\r\n        <View style={{ flex: 1, backgroundColor: BGColor, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Animatable.Image \r\n          source={Logo} \r\n          style={{\r\n            height: 150, \r\n            width: 150,\r\n            bottom: 100,\r\n          }}\r\n          animation='rubberBand'\r\n          duration={2500}\r\n          delay={2500}\r\n          useNativeDriver\r\n          iterationCount={Infinity}\r\n            />\r\n        </View>\r\n        <Animatable.Text\r\n          style={styles.titleText}\r\n          animation='fadeInUp'\r\n          delay={1200}\r\n        >\r\n          QuizApp\r\n        </Animatable.Text>\r\n        <Animatable.View style={styles.bottomView} animation='fadeInUp' delay={1800}>\r\n          <Text style={styles.loginText}>Entrar</Text>\r\n          <View style={styles.inputView}>\r\n            <Icon\r\n              style={styles.inputIcon}\r\n              name='at-outline'\r\n              type='ionicon'\r\n              color='#5352ed'\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder='Usuário'\r\n              autoCapitalize='none'\r\n              keyboardType='email-address'\r\n              textContentType='emailAddress'\r\n              onChangeText={setEmail}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <Icon\r\n              style={styles.inputIcon}\r\n              name='lock'\r\n              type='ionicons'\r\n              color='#5352ed'\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder='Senha'\r\n              secureTextEntry={true}\r\n              autoCapitalize='none'\r\n              onChangeText={setPassword}\r\n            />\r\n          </View>\r\n          <TouchableOpacity>\r\n          <Text style={styles.fpText}>Esqueci a senha</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.loginButton} onPress={loginFB}>\r\n            <Animatable.Text animation={denyFX} style={styles.loginButtonText}>Entrar</Animatable.Text>\r\n          </TouchableOpacity>\r\n          <Text style={styles.registerText}>\r\n            Não possui uma conta?\r\n            <Text style={{ color: '#5352ed', fontFamily: 'SSPBold' }} onPress={() => navigation.navigate(registrar)}>\r\n              {' Cadastrar'}\r\n            </Text>\r\n          </Text>\r\n        </Animatable.View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n    );\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    position: 'absolute',\r\n    top: Dimensions.get('screen').height * 0.1,\r\n    alignSelf: 'center',\r\n    color: '#fff',\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 60,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n  },\r\n  bottomView: {\r\n    backgroundColor: '#fff',\r\n    opacity: 0.95,\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    paddingTop: 10,\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  loginText: {\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 24,\r\n    marginTop: 12,\r\n    marginBottom: 4,\r\n  },\r\n  inputView: {\r\n    height: 40,\r\n    borderRadius: 10,\r\n    backgroundColor: '#f1f3f6',\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  inputIcon: {\r\n    paddingHorizontal: 8,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    flex: 1,\r\n    fontFamily: 'SSPRegular',\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#5352ed',\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    marginTop: 10,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    fontFamily: 'SSPBold',\r\n    alignSelf: 'center',\r\n    fontSize: 18,\r\n  },\r\n  registerText: {\r\n    alignSelf: 'center',\r\n    marginTop: 12,\r\n    fontFamily: 'SSPRegular',\r\n    fontSize: 16,\r\n  },\r\n  fpText: {\r\n    marginTop: 10,\r\n    alignSelf: 'flex-end',\r\n    fontFamily: 'SSPBold',\r\n    fontSize: 16,\r\n    color: '#5352ed',\r\n  },\r\n  });"]},"metadata":{},"sourceType":"module"}